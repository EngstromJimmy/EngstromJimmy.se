@using System.ComponentModel
@namespace EngstromJimmySe.Components
@using EngstromJimmySe.Services
@inject AppStateService appstate
@inject BlogService blogService


<Router AppAssembly="@typeof(Program).Assembly">
    <Found Context="routeData">
        @{
            object oid;
            if (routeData.RouteValues.TryGetValue("id", out oid))
            {
                try
                {
                    var post = blogService.GetPostAsync(oid.ToString()).GetAwaiter().GetResult();
                    title = post.Title;
                    content = post.GetFirstParagraph();
                    date = post.Date.ToUniversalTime().ToString();
                }
                catch { }
            }


        }
        <!--Whatever tags you want-->
        <title>@title</title>
        <!-- COMMON TAGS -->
        <meta charset="utf-8">
        <!-- Search Engine -->
        <meta name="image" content="http://engstromjimmy.se/images/jimmy.png" />
        <!-- Schema.org for Google -->
        <meta itemprop="name" content="@title" />
        <meta itemprop="description" content="@content" />
        <meta itemprop="image" content="http://engstromjimmy.se/images/jimmy.png" />
        <!-- Twitter -->
        <meta name="twitter:card" content="@content" />
        <meta name="twitter:title" content="@title" />
        <meta name="twitter:description" content="@title" />
        <meta name="twitter:site" content="@@Engstromjimmy" />
        <meta name="twitter:creator" content="@@Engstromjimmy" />
        <meta name="twitter:image:src" content="http://engstromjimmy.se/images/jimmy.png" />
        <!-- Twitter - Article -->
        <!-- Open Graph general (Facebook, Pinterest & Google+) -->
        <meta name="title" property="og:title" content="@title" />
        <meta name="og:title" content="@title" />
        <meta name="description" property="og:description" content="@content">
        <meta name="image" property="og:image" content="http://engstromjimmy.se/images/jimmy.png" />
        <meta name="author" content="Jimmy Engström" />
        <meta name="og:url" content="http://engstromjimmy.se" />
        <meta name="og:site_name" content="@title" />
        <meta name="og:type" content="article" />
        <meta property="article:published_time" content="@date" />
        <!-- Open Graph - Article -->
        @*<meta name="article:section" content="Technology">
        <meta name="article:published_time" content="2020-03-15">
        <meta name="article:author" content="Jimmy Engström">
        <meta name="article:tag" content="Blazor">
        <meta name="article:expiration_time" content="2020-03-15">
        <meta name="article:modified_time" content="2020-03-15">*@
    </Found>
    <NotFound>
        
    </NotFound>
</Router>


@code {

    public string id { get; set; }
    string title = "EngstromJimmy.se";
    string content = "";
    string date = DateTime.Now.ToUniversalTime().ToString();
    protected override async Task OnInitializedAsync()
    {
        appstate.PropertyChanged += (object sender, PropertyChangedEventArgs e) =>
        {
            InvokeAsync(() =>
            {
                StateHasChanged();
            });
        };
        await base.OnInitializedAsync();
    }

}